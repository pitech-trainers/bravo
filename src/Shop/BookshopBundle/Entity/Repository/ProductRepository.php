<?php

namespace Shop\BookshopBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{

    public function getLatestProducts($limit = null)
    {
        $qb = $this->createQueryBuilder('p')
                ->select('p, c')
                ->join('p.category', 'c')
                ->addOrderBy('p.id', 'DESC');

        if (false === is_null($limit))
            $qb->setMaxResults($limit);

        return $qb->getQuery()
                        ->getResult();
    }

    public function getRandomProd($category, $limit = null)
    {

        $qb = $this->createQueryBuilder('p')
                ->select('p')
                ->where('p.category = :category')
                ->setParameter('category', $category);

        $qb2 = $this->getEntityManager()->createQueryBuilder()->select('COUNT(p.id)')
                                                              ->from('ShopBookshopBundle:Product', 'p')
                                                               ->where('p.category = :category')
                                                               ->setParameter('category', $category);
        $number = $qb2->getQuery()->getSingleScalarResult();
        
        if (false === is_null($limit)){
            $qb->setMaxResults($limit)->setFirstResult(rand(0, $number-$limit));
        }
        
        return $qb->getQuery()
                        ->getResult();
    }

}
